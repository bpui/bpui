
/**
* Copyright (c) 2020 Copyright bp All Rights Reserved.
* Author: lipengxiang
* Date: 2020-02-24 11:03
* Desc: 
*/



/**
* Copyright (c) 2017 Copyright bp All Rights Reserved.
* Author: lipengxiang
* Date: 2020-02-12 12:05
* Desc: 
*/

/* 系统字体 */
$bpFont: -apple-system-font,"PingFang SC","Microsoft YaHei",sans-serif !default;  
$bpFontSize: 17px !default;

/* 主色 */
$bpColorPrimary: #07C160 !default;
/* 警告色 */
$bpColorWarn: #FA5151 !default;
/* 背景色 */
$bpBgColor: #F7F7F7 !default;
/* 文本颜色 */
$bpTextColor: #111 !default;
/* 副文本颜色 */
$bpTextColorSecondary: #333 !default;
/* 链接文本颜色 */
$bpLinkColor: #576B95 !default;
/* 边框颜色 */
$bpBorderColor: rgba(0,0,0,.1) !default;


// 不支持圆角
// -color 使用图片边框的颜色, 会渐变.
@mixin bp-thinBorderBottom($color) {
  border-bottom: 1px solid $color;
  @media (-webkit-min-device-pixel-ratio: 2),(min-resolution:192dpi) {
    border-bottom: none;
    background-size: 100% 1px;
    background-repeat: no-repeat;
    background-position: bottom;
    background-image: linear-gradient(0deg, $color 49%, transparent 51%, transparent);
  }
}

@mixin bp-thinBorderTop($color) {
  border-top: 1px solid $color;
  @media (-webkit-min-device-pixel-ratio: 2),(min-resolution:192dpi) {
    border-top: none;
    background-size: 100% 1px;
    background-repeat: no-repeat;
    background-position: top;
    background-image: linear-gradient(180deg, $color 50%, transparent 50%, transparent);
  }
}

@mixin bp-thinBorderLeft($color) {
  border-left: 1px solid $color;
  @media (-webkit-min-device-pixel-ratio: 2),(min-resolution:192dpi) {
    border-left: none;
    background-size: 1px 100%;
    background-repeat: no-repeat;
    background-position: left;
    background-image: linear-gradient(90deg, $color 50%, transparent 50%, transparent);
  }
}

@mixin bp-thinBorderRight($color) {
  border-right: 1px solid $color;
  @media (-webkit-min-device-pixel-ratio: 2),(min-resolution:192dpi) {
    border-right: none;
    background-size: 1px 100%;
    background-repeat: no-repeat;
    background-position: right;
    background-image: linear-gradient(270deg, $color 49%, transparent 51%, transparent);
  }
}


@mixin bp-thinBorderTopLeft($color) {
  border-top: 1px solid $color;
  border-left: 1px solid $color;
  @media (-webkit-min-device-pixel-ratio: 2),(min-resolution:192dpi) {
    border-top: none;
    border-left: none;
    background-size: 100% 1px, 1px 100%;
    background-repeat: no-repeat;
    background-position: top, left;
    background-image: linear-gradient(180deg, $color 50%, transparent 50%, transparent), linear-gradient(90deg, $color 50%, transparent 50%, transparent);
  }
}

@mixin bp-thinBorder($color) {
  border-top: 1px solid $color;
  border-left: 1px solid $color;
  border-bottom: 1px solid $color;
  border-right: 1px solid $color;
  @media (-webkit-min-device-pixel-ratio: 2),(min-resolution:192dpi) {
    border-top: none;
    border-left: none;
    border-bottom: none;
    border-right: none;
    background-size: 100% 1px, 1px 100%, 100% 1px, 1px 100%;
    background-repeat: no-repeat;
    background-position: top, left, bottom, right;
    background-image: linear-gradient(180deg, $color 50%, transparent 50%, transparent), linear-gradient(90deg, $color 50%, transparent 50%, transparent), linear-gradient(0deg, $color 49%, transparent 51%, transparent), linear-gradient(270deg, $color 49%, transparent 51%, transparent);
  }
}
/**
* Copyright (c) 2020 Copyright bp All Rights Reserved.
* Author: lipengxiang
* Date: 2018-06-13 15:04
* Desc: 设备自适应.
*/

/*
iphone4  320~480
iphone5  320~568
iphone6  375~667

iphone6p 414~736
iphonex  375~812

ipad      768~1024
ipad pro  1024~1366
*/


/* is phone */
@mixin bp-isPhone {
  @media screen and (max-width: 767px) {
    @content;
  }
}

/* is tablet */
@mixin bp-isTablet {
  @media screen and (min-width: 768px) {
    @content;
  }
}

/* Landscape */
@mixin bp-isLandscape {
  @media screen and (orientation:landscape) {
    @content;
  }
}
/* Portrait */
@mixin bp-isPortrait {
  @media screen and (orientation:portrait) {
    @content;
  }
}




/**
 * @desc: 单行缩略.
 */
@mixin bp-ellipsis() {
  text-overflow: ellipsis;
  overflow-x: hidden;
  overflow-y: hidden;
  white-space: nowrap;
}

/**
 * @desc: 多行缩略.
 * @param lines: 指定最多的行数.
 */
@mixin bp-ellipsisMultiline($lines) {
  display: -webkit-box;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: normal;
  word-break: break-all;
  /*! autoprefixer: ignore next */
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
}

/**
 * @desc: 平滑字体.
 */
@mixin bp-smoothing() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
}



/** use for unpkg cdn */


@font-face {
  font-family: 'bpui-icon';
  src:  url('//unpkg.com/@bpui/libs/icons/font/bpui-icon.eot');
  src:  url('//unpkg.com/@bpui/libs/icons/font/bpui-icon.eot#iefix') format('embedded-opentype'),
    url('//unpkg.com/@bpui/libs/icons/font/bpui-icon.ttf') format('truetype'),
    url('//unpkg.com/@bpui/libs/icons/font/bpui-icon.woff') format('woff'),
    url('//unpkg.com/@bpui/libs/icons/font/bpui-icon.svg#icomoon') format('svg');
  font-weight: normal;
  font-style: normal;
  font-display: block;
}

.bp-icon {
  font-family: "bpui-icon" !important;
  speak: never !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  letter-spacing: initial !important;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale !important;

  height: 32px;
  width: 32px;
  font-size: 32px;
  white-space: nowrap;

  background-repeat: no-repeat !important;
  background-position: center !important;
  background-size: 100% 100% !important;
  display: inline-block !important;

  &:before {
    display: block !important;
  }
}


.bp-iconArrowDown:before {
  content: "\e900";
}
.bp-iconArrowLeft:before {
  content: "\e901";
}
.bp-iconArrowRight:before {
  content: "\e902";
}
.bp-iconArrowUp:before {
  content: "\e903";
}
.bp-iconCancel:before {
  content: "\e904";
}
.bp-iconDelete:before {
  content: "\e905";
}
.bp-iconEdit:before {
  content: "\e906";
}
.bp-iconHeart:before {
  content: "\e907";
}
.bp-iconHeartFill:before {
  content: "\e908";
  color: #f44335;
}


/** loading frame */
@-webkit-keyframes bp-iconLoading_animationSpinKeyframes {
  0% {
    -webkit-transform: rotate(0deg)
  }
  to {
    -webkit-transform: rotate(360deg)
  }
}

@keyframes bp-iconLoading_animationSpinKeyframes {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg)
  }
  to {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg)
  }
}

.bp-iconLoading {
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  color: rgb(0, 0, 0);

  -webkit-animation: bp-iconLoading_animationSpinKeyframes 1.6s infinite linear;
  -moz-animation: bp-iconLoading_animationSpinKeyframes 1.6s infinite linear;
  animation: bp-iconLoading_animationSpinKeyframes 1.6s infinite linear;
}
.bp-iconLoading .path1:before {
  content: "\e909";
  opacity: 0.6 !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
}
.bp-iconLoading .path2:before {
  content: "\e90a";
  margin-left: -1em !important;
  opacity: 0.65 !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  margin-left: -1em !important;
}
.bp-iconLoading .path3:before {
  content: "\e90b";
  margin-left: -1em !important;
  opacity: 0.7 !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  margin-left: -1em !important;
}
.bp-iconLoading .path4:before {
  content: "\e90c";
  margin-left: -1em !important;
  opacity: 0.73 !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  margin-left: -1em !important;
}
.bp-iconLoading .path5:before {
  content: "\e90d";
  margin-left: -1em !important;
  opacity: 0.68 !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  margin-left: -1em !important;
}
.bp-iconLoading .path6:before {
  content: "\e90e";
  margin-left: -1em !important;
  opacity: 0.59 !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  margin-left: -1em !important;
}
.bp-iconLoading .path7:before {
  content: "\e90f";
  margin-left: -1em !important;
  opacity: 0.53 !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  margin-left: -1em !important;
}
.bp-iconLoading .path8:before {
  content: "\e910";
  margin-left: -1em !important;
  opacity: 0.48 !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  margin-left: -1em !important;
}
.bp-iconLoading .path9:before {
  content: "\e911";
  margin-left: -1em !important;
  opacity: 0.44 !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  margin-left: -1em !important;
}
.bp-iconLoading .path10:before {
  content: "\e912";
  margin-left: -1em !important;
  opacity: 0.41 !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  margin-left: -1em !important;
}
.bp-iconLoading .path11:before {
  content: "\e913";
  margin-left: -1em !important;
  opacity: 0.38 !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  margin-left: -1em !important;
}
.bp-iconLoading .path12:before {
  content: "\e914";
  margin-left: -1em !important;
  opacity: 0.35 !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  line-height: 1 !important;
  margin-left: -1em !important;
}
.bp-iconLocation:before {
  content: "\e915";
}
.bp-iconLocationPin:before {
  content: "\e916";
}
.bp-iconMenu:before {
  content: "\e917";
}
.bp-iconMinus:before {
  content: "\e918";
}
.bp-iconMore:before {
  content: "\e919";
}
.bp-iconOk:before {
  content: "\e91a";
}
.bp-iconPlus:before {
  content: "\e91b";
}
.bp-iconSetting:before {
  content: "\e91c";
}
.bp-iconStar:before {
  content: "\e91d";
}
.bp-iconStarFill:before {
  content: "\e91e";
  color: #efc75e;
}
.bp-iconUser:before {
  content: "\e91f";
}


html {
  @include bp-smoothing();
  font-family: $bpFont;
  font-size: $bpFontSize;
}

* {
  touch-action: manipulation;
  /* no 300ms delay */
}

[class|=bp],
button,
label {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-transform-style: flat;
  transform-style: flat;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-touch-callout: none;
  // -webkit-user-select: none;
  // -khtml-user-select: none;
  // -moz-user-select: none;
  // -ms-user-select: none;
  // user-select: none;
}

.bp-ellipsis {
  @include bp-ellipsis();
}
.bp-ellipsisMultiline1 {
  @extend .bp-ellipsis;
}
.bp-ellipsisMultiline2 {
  @include bp-ellipsisMultiline(2);
}
.bp-ellipsisMultiline3 {
  @include bp-ellipsisMultiline(3);
}
.bp-ellipsisMultiline4 {
  @include bp-ellipsisMultiline(4);
}
.bp-ellipsisMultiline5 {
  @include bp-ellipsisMultiline(5);
}
.bp-ellipsisMultiline6 {
  @include bp-ellipsisMultiline(6);
}
.bp-ellipsisMultiline7 {
  @include bp-ellipsisMultiline(7);
}
.bp-ellipsisMultiline8 {
  @include bp-ellipsisMultiline(8);
}

.bp-smoothing {
  @include bp-smoothing();
}


/**
* Copyright (c) 2020 Copyright bp All Rights Reserved.
* Author: lipengxiang
* Date: 2020-02-13 15:45
* Desc: 
*/

/* 按钮组边框色 */
$bpButtonGroupBorderColor: $bpColorPrimary;

/* 字体 */
$bpButtonFontSize: 1rem !default;
$bpButtonBorderRadius: .25rem !default;

/**
 * .bp-btnPlain
 */

$bpButtonPrimary: (
  fontWeight: bold,
  color: $bpColorPrimary,
  bgColor: rgba(0,0,0,0),
  borderColor: none,
  hover_color: rgba($bpColorPrimary, .7),
  hover_bgColor: rgba(0,0,0,0),
  hover_borderColor: none,
) !default;
$bpButtonInfo: (
  fontWeight: 400,
  color: lighten($bpColorPrimary, 2%),
  bgColor: rgba(0,0,0,0),
  borderColor: none,
  hover_color: rgba(lighten($bpColorPrimary, 2%), .7),
  hover_bgColor: rgba(0,0,0,0),
  hover_borderColor: none,
) !default;
$bpButtonWarning: (
  fontWeight: 400,
  color: $bpColorWarn,
  bgColor: rgba(0,0,0,0),
  borderColor: none,
  hover_color: rgba($bpColorWarn, .7),
  hover_bgColor: rgba(0,0,0,0),
  hover_borderColor: none,
) !default;

$bpButtonPlains: (
  Primary: $bpButtonPrimary,
  Info: $bpButtonInfo,
  Warning: $bpButtonWarning,
) !default;

/**
 * .bp-btnBorder
 */

$bpButtonBorderPrimary: (
  fontWeight: bold,
  color: $bpColorPrimary,
  bgColor: rgba(0,0,0,0),
  borderColor: solid 1px rgba($bpColorPrimary, .6),
  hover_color: rgba($bpColorPrimary, .7),
  hover_bgColor: rgba(0,0,0,0),
  hover_borderColor: solid 1px rgba($bpColorPrimary, .4),
) !default;
$bpButtonBorderInfo: (
  fontWeight: 400,
  color: lighten($bpColorPrimary, 2%),
  bgColor: rgba(0,0,0,0),
  borderColor: solid 1px rgba(lighten($bpColorPrimary, 2%), .6),
  hover_color: rgba(lighten($bpColorPrimary, 2%), .7),
  hover_bgColor: rgba(0,0,0,0),
  hover_borderColor: solid 1px rgba(lighten($bpColorPrimary, 2%), .4),
) !default;
$bpButtonBorderWarning: (
  fontWeight: 400,
  color: $bpColorWarn,
  bgColor: rgba(0,0,0,0),
  borderColor: solid 1px rgba($bpColorWarn, .6),
  hover_color: rgba($bpColorWarn, .7),
  hover_bgColor: rgba(0,0,0,0),
  hover_borderColor: solid 1px rgba($bpColorWarn, .4),
) !default;

$bpButtonBorders: (
  Primary: $bpButtonBorderPrimary,
  Info: $bpButtonBorderInfo,
  Warning: $bpButtonBorderWarning,
) !default;

/**
 * .bp-btnFill
 */

$bpButtonFillPrimary: (
  fontWeight: 400,
  color: $bpBgColor,
  bgColor: rgba($bpColorPrimary, .9),
  borderColor: solid 1px rgba(darken($bpColorPrimary, 5%), .6),
  hover_color: rgba($bpBgColor, .8),
  hover_bgColor: rgba($bpColorPrimary, .7),
  hover_borderColor: solid 1px rgba(darken($bpColorPrimary, 5%), .4),
) !default;
$bpButtonFillInfo: (
  fontWeight: 400,
  color: $bpColorPrimary,
  bgColor: rgba($bpBgColor, .9),
  borderColor: solid 1px rgba(darken($bpBgColor, 5%), .6),
  hover_color: rgba($bpColorPrimary, .8),
  hover_bgColor: rgba($bpBgColor, .7),
  hover_borderColor: solid 1px rgba(darken($bpBgColor, 5%), .4),
) !default;
$bpButtonFillWarning: (
  fontWeight: 400,
  color: $bpBgColor,
  bgColor: rgba($bpColorWarn, .9),
  borderColor: solid 1px rgba(darken($bpColorWarn, 5%), .6),
  hover_color: rgba($bpBgColor, .8),
  hover_bgColor: rgba($bpColorWarn, .7),
  hover_borderColor: solid 1px rgba(darken($bpColorWarn, 5%), .4),
) !default;

$bpButtonFills: (
  Primary: $bpButtonFillPrimary,
  Info: $bpButtonFillInfo,
  Warning: $bpButtonFillWarning,
) !default;


/**
 * default .bp-btn button
 */
$bpButtonDefault: $bpButtonPlains !default;

/**
* Copyright (c) 2020 Copyright bp All Rights Reserved.
* Author: lipengxiang
* Date: 2020-02-24 11:03
* Desc: 
*/

button,
.bp-btn {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-touch-callout: none;
  touch-action: manipulation;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  display: inline-block;
  text-align: center;
  vertical-align: middle;

  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  font-size: $bpButtonFontSize;
  padding: .38rem .48rem;
  margin: 2px;
  line-height: 1.25em;
  border-radius: $bpButtonBorderRadius;
  transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
  white-space: nowrap;
  word-wrap: break-word;
  text-transform: none;
  overflow: visible;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  outline: 0;
  outline-offset: 0;
  text-decoration: none;
  background-color: rgba(0, 0, 0, 0);
  border: none;
  cursor: pointer;

  svg, .bp-icon {
    vertical-align: middle;
    &:first-child {
      margin-right: .24rem;
    }
    &:last-child {
      margin-left: .24rem;
    }
  }

  &:active {
    opacity: 0.7;
  }

  &:disabled,
  &[disabled=disabled] {
    opacity: .6;
    cursor: not-allowed;
    touch-action: none;
    pointer-events: none;
  }
}

/** default */
button,
.bp-btn {
  font-weight: map-get(map-get($bpButtonDefault, Info), fontWeight);
  color: map-get(map-get($bpButtonDefault, Info), color);
  border: map-get(map-get($bpButtonDefault, Info), borderColor);
  background-color: map-get(map-get($bpButtonDefault, Info), bgColor);

  &:hover {
    color: map-get(map-get($bpButtonDefault, Info), hover_color);
    border: map-get(map-get($bpButtonDefault, Info), hover_borderColor);
    background-color: map-get(map-get($bpButtonDefault, Info), hover_bgColor);
  }

  &.bp-btnPlain {
    font-weight: map-get(map-get($bpButtonPlains, Info), fontWeight);
    color: map-get(map-get($bpButtonPlains, Info), color);
    border: map-get(map-get($bpButtonPlains, Info), borderColor);
    background-color: map-get(map-get($bpButtonPlains, Info), bgColor);
    &:hover {
      color: map-get(map-get($bpButtonPlains, Info), hover_color);
      border: map-get(map-get($bpButtonPlains, Info), hover_borderColor);
      background-color: map-get(map-get($bpButtonPlains, Info), hover_bgColor);
    }
  }

  &.bp-btnBorder {
    font-weight: map-get(map-get($bpButtonBorders, Info), fontWeight);
    color: map-get(map-get($bpButtonBorders, Info), color);
    border: map-get(map-get($bpButtonBorders, Info), borderColor);
    background-color: map-get(map-get($bpButtonBorders, Info), bgColor);
    &:hover {
      color: map-get(map-get($bpButtonBorders, Info), hover_color);
      border: map-get(map-get($bpButtonBorders, Info), hover_borderColor);
      background-color: map-get(map-get($bpButtonBorders, Info), hover_bgColor);
    }
  }
  
  &.bp-btnFill {
    font-weight: map-get(map-get($bpButtonFills, Info), fontWeight);
    color: map-get(map-get($bpButtonFills, Info), color);
    border: map-get(map-get($bpButtonFills, Info), borderColor);
    background-color: map-get(map-get($bpButtonFills, Info), bgColor);
    &:hover {
      color: map-get(map-get($bpButtonFills, Info), hover_color);
      border: map-get(map-get($bpButtonFills, Info), hover_borderColor);
      background-color: map-get(map-get($bpButtonFills, Info), hover_bgColor);
    }
  }

  /** primary */
  &[primary] {
    font-weight: map-get(map-get($bpButtonDefault, Primary), fontWeight);
    color: map-get(map-get($bpButtonDefault, Primary), color);
    border: map-get(map-get($bpButtonDefault, Primary), borderColor);
    background-color: map-get(map-get($bpButtonDefault, Primary), bgColor);

    &:hover {
      color: map-get(map-get($bpButtonDefault, Primary), hover_color);
      border: map-get(map-get($bpButtonDefault, Primary), hover_borderColor);
      background-color: map-get(map-get($bpButtonDefault, Primary), hover_bgColor);
    }

    &.bp-btnPlain {
      font-weight: map-get(map-get($bpButtonPlains, Primary), fontWeight);
      color: map-get(map-get($bpButtonPlains, Primary), color);
      border: map-get(map-get($bpButtonPlains, Primary), borderColor);
      background-color: map-get(map-get($bpButtonPlains, Primary), bgColor);
      &:hover {
        color: map-get(map-get($bpButtonPlains, Primary), hover_color);
        border: map-get(map-get($bpButtonPlains, Primary), hover_borderColor);
        background-color: map-get(map-get($bpButtonPlains, Primary), hover_bgColor);
      }
    }
    &.bp-btnBorder {
      font-weight: map-get(map-get($bpButtonBorders, Primary), fontWeight);
      color: map-get(map-get($bpButtonBorders, Primary), color);
      border: map-get(map-get($bpButtonBorders, Primary), borderColor);
      background-color: map-get(map-get($bpButtonBorders, Primary), bgColor);
      &:hover {
        color: map-get(map-get($bpButtonBorders, Primary), hover_color);
        border: map-get(map-get($bpButtonBorders, Primary), hover_borderColor);
        background-color: map-get(map-get($bpButtonBorders, Primary), hover_bgColor);
      }
    }
    
    &.bp-btnFill {
      font-weight: map-get(map-get($bpButtonFills, Primary), fontWeight);
      color: map-get(map-get($bpButtonFills, Primary), color);
      border: map-get(map-get($bpButtonFills, Primary), borderColor);
      background-color: map-get(map-get($bpButtonFills, Primary), bgColor);
      &:hover {
        color: map-get(map-get($bpButtonFills, Primary), hover_color);
        border: map-get(map-get($bpButtonFills, Primary), hover_borderColor);
        background-color: map-get(map-get($bpButtonFills, Primary), hover_bgColor);
      }
    }
  }

  /** warning */
  &[warning] {
    font-weight: map-get(map-get($bpButtonDefault, Warning), fontWeight);
    color: map-get(map-get($bpButtonDefault, Warning), color);
    border: map-get(map-get($bpButtonDefault, Warning), borderColor);
    background-color: map-get(map-get($bpButtonDefault, Warning), bgColor);

    &:hover {
      color: map-get(map-get($bpButtonDefault, Warning), hover_color);
      border: map-get(map-get($bpButtonDefault, Warning), hover_borderColor);
      background-color: map-get(map-get($bpButtonDefault, Warning), hover_bgColor);
    }

    &.bp-btnPlain {
      font-weight: map-get(map-get($bpButtonPlains, Warning), fontWeight);
      color: map-get(map-get($bpButtonPlains, Warning), color);
      border: map-get(map-get($bpButtonPlains, Warning), borderColor);
      background-color: map-get(map-get($bpButtonPlains, Warning), bgColor);
      &:hover {
        color: map-get(map-get($bpButtonPlains, Warning), hover_color);
        border: map-get(map-get($bpButtonPlains, Warning), hover_borderColor);
        background-color: map-get(map-get($bpButtonPlains, Warning), hover_bgColor);
      }
    }
    &.bp-btnBorder {
      font-weight: map-get(map-get($bpButtonBorders, Warning), fontWeight);
      color: map-get(map-get($bpButtonBorders, Warning), color);
      border: map-get(map-get($bpButtonBorders, Warning), borderColor);
      background-color: map-get(map-get($bpButtonBorders, Warning), bgColor);
      &:hover {
        color: map-get(map-get($bpButtonBorders, Warning), hover_color);
        border: map-get(map-get($bpButtonBorders, Warning), hover_borderColor);
        background-color: map-get(map-get($bpButtonBorders, Warning), hover_bgColor);
      }
    }
    
    &.bp-btnFill {
      font-weight: map-get(map-get($bpButtonFills, Warning), fontWeight);
      color: map-get(map-get($bpButtonFills, Warning), color);
      border: map-get(map-get($bpButtonFills, Warning), borderColor);
      background-color: map-get(map-get($bpButtonFills, Warning), bgColor);
      &:hover {
        color: map-get(map-get($bpButtonFills, Warning), hover_color);
        border: map-get(map-get($bpButtonFills, Warning), hover_borderColor);
        background-color: map-get(map-get($bpButtonFills, Warning), hover_bgColor);
      }
    }
  }
}

/** each button */
@each $name, $color in $bpButtonDefault {
  .bp-btn#{$name} {
    font-weight: map-get($color, fontWeight);
    color: map-get($color, color);
    border: map-get($color, borderColor);
    background-color: map-get($color, bgColor);

    &:hover {
      color: map-get($color, hover_color);
      border: map-get($color, hover_borderColor);
      background-color: map-get($color, hover_bgColor);
    }

    &.bp-btnPlain {
      font-weight: map-get(map-get($bpButtonPlains, $name), fontWeight);
      color: map-get(map-get($bpButtonPlains, $name), color);
      border: map-get(map-get($bpButtonPlains, $name), borderColor);
      background-color: map-get(map-get($bpButtonPlains, $name), bgColor);
      &:hover {
        color: map-get(map-get($bpButtonPlains, $name), hover_color);
        border: map-get(map-get($bpButtonPlains, $name), hover_borderColor);
        background-color: map-get(map-get($bpButtonPlains, $name), hover_bgColor);
      }
    }

    &.bp-btnBorder {
      font-weight: map-get(map-get($bpButtonBorders, $name), fontWeight);
      color: map-get(map-get($bpButtonBorders, $name), color);
      border: map-get(map-get($bpButtonBorders, $name), borderColor);
      background-color: map-get(map-get($bpButtonBorders, $name), bgColor);
      &:hover {
        color: map-get(map-get($bpButtonBorders, $name), hover_color);
        border: map-get(map-get($bpButtonBorders, $name), hover_borderColor);
        background-color: map-get(map-get($bpButtonBorders, $name), hover_bgColor);
      }
    }
    
    &.bp-btnFill {
      font-weight: map-get(map-get($bpButtonFills, $name), fontWeight);
      color: map-get(map-get($bpButtonFills, $name), color);
      border: map-get(map-get($bpButtonFills, $name), borderColor);
      background-color: map-get(map-get($bpButtonFills, $name), bgColor);
      &:hover {
        color: map-get(map-get($bpButtonFills, $name), hover_color);
        border: map-get(map-get($bpButtonFills, $name), hover_borderColor);
        background-color: map-get(map-get($bpButtonFills, $name), hover_bgColor);
      }
    }
  }
}

